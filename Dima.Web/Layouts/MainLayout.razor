@inherits LayoutComponentBase

<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="_isDarkMode" Theme="Configuration.Theme" />
<MudPopoverProvider />
<MudDialogProvider /> 
<MudSnackbarProvider />





<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar>
                <MudIconButton Icon="@Icons.Material.Filled.Menu"
                Color="Color.Inherit"
                Edge="Edge.Start"
                OnClick="ToggleDrawer"/>
                Dima
                <MudSpacer />
                <MudText Typo="Typo.caption">
                    Bem-vindo(a) - @context.User.Identity?.Name
                    </MudText>
                <MudSwitch 
                    Color="Color.Inherit" 
                    @bind-Value="@_isDarkMode" 
                    T="bool" Class="ma-4" ThumbIcon="@Icons.Material.TwoTone.Lightbulb" />
            </MudAppBar>
            <MudDrawer @bind-Open="_isDrawerOpened">
                <NavMenu />
            </MudDrawer>
            <MudMainContent >
                <MudContainer Class="mt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <LoginRedirect />
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool _isDrawerOpened = true;
    private bool _isDarkMode = true;

    //para ficar escutando o S.O se acaso trocar o thema dele
    //System Preferences Watcher
    //recurso do JS includo no Mudblazor
    private MudThemeProvider _mudThemeProvider = null!;

    //após a renderização de tds componentes
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged(); // Tarefas em backgroud n atualizam a tela, aqui força essa atualização
        return Task.CompletedTask;
    }

    private void ToggleDrawer()
        => _isDrawerOpened = !_isDrawerOpened;

}